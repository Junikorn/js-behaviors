{"version":3,"sources":["translation-receiver-behavior.js"],"names":[],"mappings":";;AAAA,CAAC,YAAU;AACP,gBAAY,CAAC;;AAEb,UAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;;;;;;;;AAQ5B,MAAE,CAAC,2BAA2B,GAAG;AAC7B,kBAAU,EAAE;;;;AAIR,cAAE,EAAE,MAAM;SACb;AACD,gBAAQ,EAAA,oBAAE;;;;;AAKN,gBAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SACvD;AACD,gBAAQ,EAAA,oBAAE;;;;;AAKN,gBAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SACvD;KACJ,CAAC;CAEL,CAAA,EAAG,CAAC","file":"translation-receiver-behavior.js","sourcesContent":["(function(){\n    'use strict';\n\n    window.JS = window.JS || {};\n\n    /**\n     * `JS.TranslationReceiverBehavior` allows to use `$t` property as binding provider for translation\n     * provided by parent element extending `JS.TranslationProviderBehavior`.\n     *\n     * @polymerBehavior\n     */\n    JS.TranslationReceiverBehavior = {\n        properties: {\n            /**\n             * Object containing fetched translation.\n             */\n            $t: Object\n        },\n        attached(){\n            /**\n             * Fired when element is attached. Unsubscribes parent translation provider.\n             * @event translation-required\n             */\n            this.fire('translation-required', { target: this });\n        },\n        detached(){\n            /**\n             * Fired when element is detached. Lets element unsubscribe to parent translation provider.\n             * @event translation-released\n             */\n            this.fire('translation-released', { target: this });\n        }\n    };\n\n})();\n"],"sourceRoot":"/source/"}