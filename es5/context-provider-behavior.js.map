{"version":3,"sources":["context-provider-behavior.js"],"names":[],"mappings":";;AAAA,CAAC,YAAU;AACP,gBAAY,CAAC;;AAEb,UAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;;;;;;;AAO5B,MAAE,CAAC,2BAA2B,GAAG;AAC7B,kBAAU,EAAE;;;;;;;;AAQR,cAAE,EAAE;AACA,oBAAI,EAAE,MAAM;AACZ,qBAAK,EAAA,iBAAE;AAAE,2BAAO,EAAE,CAAC;iBAAE;aACxB;SACJ;AACD,iBAAS,EAAE;AACP,8BAAkB,EAAE,gBAAgB;SACvC;AACD,gBAAQ,EAAA,oBAAE;AACN,gBAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAC;AACZ,sBAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE;AAC7B,yBAAK,EAAE;AACH,kCAAU,EAAE,KAAK,EAAE,KAAK,EAAE,CAAA,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC;AACxD,gCAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;AAC9B,6BAAC,OAAO,IAAI,IAAI,CAAA,CAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;yBAC9E,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC;qBACf;AACD,8BAAU,EAAE;AACR,kCAAU,EAAE,KAAK,EAAE,KAAK,EAAE,CAAA,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC;AAC/D,gCAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC;AACrC,6BAAC,OAAO,IAAI,IAAI,CAAA,CAAE,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;yBAC9E,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC;qBACf;iBACJ,CAAC,CAAC;aACN;SACJ;;;;;AAKD,sBAAc,EAAA,wBAAC,CAAC,EAAC;AACb,gBAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAC;AAC1B,iBAAC,CAAC,eAAe,EAAE,CAAC;AACpB,iBAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;aACxC;SACJ;KACJ,CAAC;AACF,MAAE,CAAC,uBAAuB,GAAG,CAAC,EAAE,CAAC,2BAA2B,EAAE,EAAE,CAAC,wBAAwB,CAAC,CAAC;CAE9F,CAAA,EAAG,CAAC","file":"context-provider-behavior.js","sourcesContent":["(function(){\r\n    'use strict';\r\n\r\n    window.JS = window.JS || {};\r\n\r\n    /**\r\n     * `JS.ContextProviderBehavior` allows to synchronise elements context (`$c`) with all of it's children extending `JS.ContextReceiverBehavior`\r\n     *\r\n     * @polymerBehavior JS.ContextProviderBehavior\r\n     */\r\n    JS.ContextProviderBehaviorImpl = {\r\n        properties: {\r\n            /**\r\n             * Synchronised context object (you can initialize it yourself with default values)\r\n             *\r\n             * Available methods:\r\n             * - `set(path, value)` - set context path value & trigger change notification on all subscribed elements\r\n             * - `notifyPath(path, value)` - trigger path change notification on all subscribed elements\r\n             */\r\n            $c: {\r\n                type: Object,\r\n                value(){ return {}; }\r\n            }\r\n        },\r\n        listeners: {\r\n            'context-required': '_attachContext'\r\n        },\r\n        attached(){\r\n            if(!this.$c.set){\r\n                Object.defineProperties(this.$c, {\r\n                    'set': {\r\n                        enumerable: false, value: function set(path, value, context){\r\n                            this.set('$c.' + path, value);\r\n                            (context || this).$e.fire('context-changed', { path: path, value: value });\r\n                        }.bind(this)\r\n                    },\r\n                    notifyPath: {\r\n                        enumerable: false, value: function notifyPath(path, value, context){\r\n                            this.notifyPath('$c.' + path, value);\r\n                            (context || this).$e.fire('context-changed', { path: path, value: value });\r\n                        }.bind(this)\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        /**\r\n         * Method attaching context to listening child element\r\n         * @listens context-required\r\n         */\r\n        _attachContext(e){\r\n            if(e.detail.receiver !== this){\r\n                e.stopPropagation();\r\n                e.detail.receiver.set('$c', this.$c);\r\n            }\r\n        }\r\n    };\r\n    JS.ContextProviderBehavior = [JS.ContextProviderBehaviorImpl, JS.EventBusListenerBehavior];\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}