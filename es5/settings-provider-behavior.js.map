{"version":3,"sources":["settings-provider-behavior.js"],"names":[],"mappings":";;AAAA,CAAC,YAAU;AACP,gBAAY,CAAC;;AAEb,UAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;;;;;;;AAO5B,MAAE,CAAC,wBAAwB,GAAG;AAC1B,kBAAU,EAAE;;;;;AAKR,cAAE,EAAE,MAAM;SACb;AACD,iBAAS,EAAE;AACP,+BAAmB,EAAE,iBAAiB;SACzC;;;;;AAKD,uBAAe,EAAE,yBAAS,CAAC,EAAC;AACxB,gBAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAC;AAC1B,iBAAC,CAAC,eAAe,EAAE,CAAC;AACpB,iBAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;aACxC;SACJ;KACJ,CAAC;CAEL,CAAA,EAAG,CAAC","file":"settings-provider-behavior.js","sourcesContent":["(function(){\n    'use strict';\n\n    window.JS = window.JS || {};\n\n    /**\n     * `JS.SettingsProviderBehavior` allows to attach element's settings (`$s`) to all of it's children extending `JS.SettingsReceiverBehavior`\n     *\n     * @polymerBehavior\n     */\n    JS.SettingsProviderBehavior = {\n        properties: {\n            /**\n             * Settings object (has no default, you should set it by yourself)\n             * @default undefined\n             */\n            $s: Object\n        },\n        listeners: {\n            'settings-required': '_attachSettings'\n        },\n        /**\n         * Method attaching settings to subscribing child element\n         * @listens settings-required\n         */\n        _attachSettings: function(e){\n            if(e.detail.receiver !== this){\n                e.stopPropagation();\n                e.detail.receiver.set('$s', this.$s);\n            }\n        }\n    };\n\n})();\n"],"sourceRoot":"/source/"}