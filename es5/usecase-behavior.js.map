{"version":3,"sources":["usecase-behavior.js"],"names":[],"mappings":";;AAAA,CAAC,YAAU;AACP,gBAAY,CAAC;;AAEb,UAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC;;;;;;;AAO5B,MAAE,CAAC,mBAAmB,GAAG;AACrB,kBAAU,EAAE;;;;AAIR,0BAAc,EAAE;AACZ,oBAAI,EAAE,KAAK;AACX,qBAAK,EAAE,IAAI;aACd;SACJ;AACD,iBAAS,EAAE,CACP,eAAe,CAClB;;;;AAID,iBAAS,EAAA,qBAAE;;;AACP,gBAAI,CAAC,KAAK,CAAC,YAAM;AACb,oBAAI,KAAK,GAAG,MAAK,QAAQ,EAAE,CAAC;AAC5B,wBAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,oBAAG,MAAK,EAAE,IAAI,UAAS,MAAK,EAAE,CAAC,OAAO,EAAE;AACpC,0BAAK,EAAE,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;iBAC/B;aACJ,CAAC,CAAC;SACN;;;;AAID,gBAAQ,EAAA,oBAAE;AACN,mBAAO,IAAI,CAAC,EAAE,IAAK,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAA,AAAC,AAAC,IAAI,EAAE,CAAC;SAChG;;;;AAID,gBAAQ,EAAA,oBAAE;;SAET;KACJ,CAAC;AACF,MAAE,CAAC,eAAe,GAAG,CAAC,OAAO,CAAC,sBAAsB,EAAE,EAAE,CAAC,mBAAmB,EAAE,EAAE,CAAC,uBAAuB,CAAC,CAAC;CAE7G,CAAA,EAAG,CAAC","file":"usecase-behavior.js","sourcesContent":["(function(){\r\n    'use strict';\r\n\r\n    window.JS = window.JS || {};\r\n\r\n    /**\r\n     * `JS.UsecaseBehavior` sets interface for selectable usecase view management and document.title changes\r\n     *\r\n     * @polymerBehavior JS.UsecaseBehavior\r\n     */\r\n    JS.UsecaseBehaviorImpl = {\r\n        properties: {\r\n            /**\r\n             * Placeholder for array of rights required to open view (sugar property)\r\n             */\r\n            requiredRights: {\r\n                type: Array,\r\n                value: null\r\n            }\r\n        },\r\n        observers: [\r\n            '_setTitle($t)'\r\n        ],\r\n        /**\r\n         * Method setting title in context and document if usecase is selected\r\n         */\r\n        _setTitle(){\r\n            this.async(() => {\r\n                var title = this.getTitle();\r\n                document.title = title;\r\n                if(this.$c && this === this.$c.usecase) {\r\n                    this.$c.set('title', title);\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * Method getting title for usecase. Returns `$t.title - $t.subtitle`, `$t.title` or empty string. Can be overwritten\r\n         */\r\n        getTitle(){\r\n            return this.$t && (this.$t.title + (this.$t.subtitle ? ' - ' + this.$t.subtitle : '')) || '';\r\n        },\r\n        /**\r\n         * Method executed when usecase is selected. Should be overwritten\r\n         */\r\n        selected(){\r\n            //placeholder\r\n        }\r\n    };\r\n    JS.UsecaseBehavior = [Polymer.NeonAnimatableBehavior, JS.UsecaseBehaviorImpl, JS.ContextReceiverBehavior];\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}